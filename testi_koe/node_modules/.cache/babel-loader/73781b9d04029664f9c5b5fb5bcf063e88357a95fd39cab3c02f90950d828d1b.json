{"ast":null,"code":"var _jsxFileName = \"/home/jkhaimi/Kesatyo/StudyTracker/testi_koe/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Clock from './Clock';\nimport jsonData from './testinfo.json';\nimport OptionButtons from './OptionButtons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  if (questionData.type === single) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Clock, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-container\",\n        children: jsonData.map((questionData, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Type: \", questionData.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Question: \", questionData.question]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(OptionButtons, {\n            options: questionData.options,\n            answer: questionData.answers\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this);\n  }\n  ;\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Clock","jsonData","OptionButtons","jsxDEV","_jsxDEV","App","questionData","type","single","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","question","options","answer","answers","_c","$RefreshReg$"],"sources":["/home/jkhaimi/Kesatyo/StudyTracker/testi_koe/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\nimport Clock from './Clock';\nimport jsonData from './testinfo.json';\nimport OptionButtons from './OptionButtons';\n\nconst App = () => {\n  if (questionData.type === single) {\n  return (\n    <div className=\"app\">\n      <h1>Test</h1>\n      <Clock />\n      <div className=\"question-container\">\n        {jsonData.map((questionData, index) => (\n          <div key={index}>\n            <h1>Type: {questionData.type}</h1>\n            <h1>Question: {questionData.question}</h1>\n            <OptionButtons options={questionData.options} answer={questionData.answers} />\n          </div>\n        ))}\n      </div>\n      <button className=\"submit-button\"><strong>Submit</strong></button>\n    </div>\n  );\n};}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB,IAAIC,YAAY,CAACC,IAAI,KAAKC,MAAM,EAAE;IAClC,oBACEJ,OAAA;MAAKK,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAClBN,OAAA;QAAAM,QAAA,EAAI;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACbV,OAAA,CAACJ,KAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACTV,OAAA;QAAKK,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAChCT,QAAQ,CAACc,GAAG,CAAC,CAACT,YAAY,EAAEU,KAAK,kBAChCZ,OAAA;UAAAM,QAAA,gBACEN,OAAA;YAAAM,QAAA,GAAI,QAAM,EAACJ,YAAY,CAACC,IAAI;UAAA;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAClCV,OAAA;YAAAM,QAAA,GAAI,YAAU,EAACJ,YAAY,CAACW,QAAQ;UAAA;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC1CV,OAAA,CAACF,aAAa;YAACgB,OAAO,EAAEZ,YAAY,CAACY,OAAQ;YAACC,MAAM,EAAEb,YAAY,CAACc;UAAQ;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA,GAHtEE,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIV,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNV,OAAA;QAAQK,SAAS,EAAC,eAAe;QAAAC,QAAA,eAACN,OAAA;UAAAM,QAAA,EAAQ;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC;EAEV;EAAC;AAAC,CAAC;AAAAO,EAAA,GAlBGhB,GAAG;AAoBT,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}