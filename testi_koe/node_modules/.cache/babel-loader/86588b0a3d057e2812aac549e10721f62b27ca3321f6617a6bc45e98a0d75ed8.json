{"ast":null,"code":"var _jsxFileName = \"/home/jkhaimi/Kesatyo/react-app-test/src/Clock.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Clock() {\n  _s();\n  const [time, setTime] = useState(new Date());\n  useEffect(() => {\n    const timerID = setInterval(() => {\n      setTime(new Date());\n    }, 1000);\n\n    // Cleanup function to clear the interval when the component unmounts\n    return () => {\n      clearInterval(timerID);\n    };\n  }, []);\n  const hours = time.getHours().toString().padStart(2, '0');\n  const minutes = time.getMinutes().toString().padStart(2, '0');\n  const seconds = time.getSeconds().toString().padStart(2, '0');\n  const timeString = `${hours}:${minutes}:${seconds}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: timeString\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n}\n_s(Clock, \"I0+7QaEsXHXB0XO5JypI3yBHjPI=\");\n_c = Clock;\nexport default Clock;\nvar _c;\n$RefreshReg$(_c, \"Clock\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Clock","_s","time","setTime","Date","timerID","setInterval","clearInterval","hours","getHours","toString","padStart","minutes","getMinutes","seconds","getSeconds","timeString","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jkhaimi/Kesatyo/react-app-test/src/Clock.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction Clock() {\n  const [time, setTime] = useState(new Date());\n\n  useEffect(() => {\n    const timerID = setInterval(() => {\n      setTime(new Date());\n    }, 1000);\n\n    // Cleanup function to clear the interval when the component unmounts\n    return () => {\n      clearInterval(timerID);\n    };\n  }, []);\n\n  const hours = time.getHours().toString().padStart(2, '0');\n  const minutes = time.getMinutes().toString().padStart(2, '0');\n  const seconds = time.getSeconds().toString().padStart(2, '0');\n  const timeString = `${hours}:${minutes}:${seconds}`;\n\n  return <div>{timeString}</div>;\n}\n\nexport default Clock;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAIQ,IAAI,CAAC,CAAC,CAAC;EAE5CP,SAAS,CAAC,MAAM;IACd,MAAMQ,OAAO,GAAGC,WAAW,CAAC,MAAM;MAChCH,OAAO,CAAC,IAAIC,IAAI,CAAC,CAAC,CAAC;IACrB,CAAC,EAAE,IAAI,CAAC;;IAER;IACA,OAAO,MAAM;MACXG,aAAa,CAACF,OAAO,CAAC;IACxB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,KAAK,GAAGN,IAAI,CAACO,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACzD,MAAMC,OAAO,GAAGV,IAAI,CAACW,UAAU,CAAC,CAAC,CAACH,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAC7D,MAAMG,OAAO,GAAGZ,IAAI,CAACa,UAAU,CAAC,CAAC,CAACL,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAC7D,MAAMK,UAAU,GAAI,GAAER,KAAM,IAAGI,OAAQ,IAAGE,OAAQ,EAAC;EAEnD,oBAAOf,OAAA;IAAAkB,QAAA,EAAMD;EAAU;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAChC;AAACpB,EAAA,CApBQD,KAAK;AAAAsB,EAAA,GAALtB,KAAK;AAsBd,eAAeA,KAAK;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}