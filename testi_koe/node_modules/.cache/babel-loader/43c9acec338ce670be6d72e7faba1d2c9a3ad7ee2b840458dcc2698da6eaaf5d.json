{"ast":null,"code":"var _jsxFileName = \"/home/jkhaimi/Kesatyo/StudyTracker/testi_koe/src/SingleButtons.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SingleButtons = _ref => {\n  _s();\n  let {\n    options,\n    answer,\n    index,\n    onSubmit\n  } = _ref;\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const handleOptionClick = (option, rowIndex, optionIndex) => {\n    setSelectedOptions(prevSelectedOptions => {\n      const updatedOptions = [...prevSelectedOptions];\n      updatedOptions[rowIndex] = optionIndex;\n      return updatedOptions;\n    });\n  };\n  const checkAnswers = () => {\n    // let score = 0;\n    selectedOptions.forEach((selectedOption, rowIndex) => {\n      // if (selectedOption === answer[rowIndex]) {\n      //   score++;\n      // }\n    });\n    console.log(`Score: ${score}`);\n    onSubmit(index, selectedOptions);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"single-container\",\n    children: [options.map((rowOptions, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row-container\",\n      children: Array.isArray(rowOptions) ? rowOptions.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `single-box ${selectedOptions[rowIndex] === optionIndex ? 'selected' : ''}`,\n        onClick: () => handleOptionClick(option, rowIndex, optionIndex),\n        children: option\n      }, optionIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: Invalid options for row \", rowIndex]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-button\",\n      onClick: checkAnswers,\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 64\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(SingleButtons, \"S24nRharoliKpDmkOrz7zqRL0rI=\");\n_c = SingleButtons;\nexport default SingleButtons;\nvar _c;\n$RefreshReg$(_c, \"SingleButtons\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SingleButtons","_ref","_s","options","answer","index","onSubmit","selectedOptions","setSelectedOptions","handleOptionClick","option","rowIndex","optionIndex","prevSelectedOptions","updatedOptions","checkAnswers","forEach","selectedOption","console","log","score","className","children","map","rowOptions","Array","isArray","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jkhaimi/Kesatyo/StudyTracker/testi_koe/src/SingleButtons.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst SingleButtons = ({ options, answer, index, onSubmit }) => {\n  const [selectedOptions, setSelectedOptions] = useState([]);\n\n  const handleOptionClick = (option, rowIndex, optionIndex) => {\n    setSelectedOptions((prevSelectedOptions) => {\n      const updatedOptions = [...prevSelectedOptions];\n      updatedOptions[rowIndex] = optionIndex;\n      return updatedOptions;\n    });\n  };\n\n  const checkAnswers = () => {\n    // let score = 0;\n    selectedOptions.forEach((selectedOption, rowIndex) => {\n      // if (selectedOption === answer[rowIndex]) {\n      //   score++;\n      // }\n    });\n    console.log(`Score: ${score}`);\n    onSubmit(index, selectedOptions);\n  };\n\n  return (\n    <div className=\"single-container\">\n      {options.map((rowOptions, rowIndex) => (\n        <div key={rowIndex} className=\"row-container\">\n          {Array.isArray(rowOptions) ? (\n            rowOptions.map((option, optionIndex) => (\n              <button\n                key={optionIndex}\n                className={`single-box ${selectedOptions[rowIndex] === optionIndex ? 'selected' : ''}`}\n                onClick={() => handleOptionClick(option, rowIndex, optionIndex)}\n              >\n                {option}\n              </button>\n            ))\n          ) : (\n            <p>Error: Invalid options for row {rowIndex}</p>\n          )}\n        </div>\n      ))}\n      <button className=\"submit-button\" onClick={checkAnswers}><strong>Submit</strong></button>\n    </div>\n  );\n};\n\nexport default SingleButtons;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGC,IAAA,IAA0C;EAAAC,EAAA;EAAA,IAAzC;IAAEC,OAAO;IAAEC,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAAL,IAAA;EACzD,MAAM,CAACM,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMY,iBAAiB,GAAGA,CAACC,MAAM,EAAEC,QAAQ,EAAEC,WAAW,KAAK;IAC3DJ,kBAAkB,CAAEK,mBAAmB,IAAK;MAC1C,MAAMC,cAAc,GAAG,CAAC,GAAGD,mBAAmB,CAAC;MAC/CC,cAAc,CAACH,QAAQ,CAAC,GAAGC,WAAW;MACtC,OAAOE,cAAc;IACvB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB;IACAR,eAAe,CAACS,OAAO,CAAC,CAACC,cAAc,EAAEN,QAAQ,KAAK;MACpD;MACA;MACA;IAAA,CACD,CAAC;IACFO,OAAO,CAACC,GAAG,CAAE,UAASC,KAAM,EAAC,CAAC;IAC9Bd,QAAQ,CAACD,KAAK,EAAEE,eAAe,CAAC;EAClC,CAAC;EAED,oBACER,OAAA;IAAKsB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,GAC9BnB,OAAO,CAACoB,GAAG,CAAC,CAACC,UAAU,EAAEb,QAAQ,kBAChCZ,OAAA;MAAoBsB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC1CG,KAAK,CAACC,OAAO,CAACF,UAAU,CAAC,GACxBA,UAAU,CAACD,GAAG,CAAC,CAACb,MAAM,EAAEE,WAAW,kBACjCb,OAAA;QAEEsB,SAAS,EAAG,cAAad,eAAe,CAACI,QAAQ,CAAC,KAAKC,WAAW,GAAG,UAAU,GAAG,EAAG,EAAE;QACvFe,OAAO,EAAEA,CAAA,KAAMlB,iBAAiB,CAACC,MAAM,EAAEC,QAAQ,EAAEC,WAAW,CAAE;QAAAU,QAAA,EAE/DZ;MAAM,GAJFE,WAAW;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CACT,CAAC,gBAEFhC,OAAA;QAAAuB,QAAA,GAAG,iCAA+B,EAACX,QAAQ;MAAA;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAChD,GAbOpB,QAAQ;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAcb,CACN,CAAC,eACFhC,OAAA;MAAQsB,SAAS,EAAC,eAAe;MAACM,OAAO,EAAEZ,YAAa;MAAAO,QAAA,eAACvB,OAAA;QAAAuB,QAAA,EAAQ;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtF,CAAC;AAEV,CAAC;AAAC7B,EAAA,CA5CIF,aAAa;AAAAgC,EAAA,GAAbhC,aAAa;AA8CnB,eAAeA,aAAa;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}