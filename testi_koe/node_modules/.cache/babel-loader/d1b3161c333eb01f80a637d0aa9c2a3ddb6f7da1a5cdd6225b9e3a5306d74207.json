{"ast":null,"code":"var _jsxFileName = \"/home/jkhaimi/Kesatyo/react-app-test/src/OptionButtons.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OptionButtons = _ref => {\n  _s();\n  let {\n    options,\n    answer\n  } = _ref;\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const handleOptionClick = (option, index) => {\n    setSelectedOptions(prevSelectedOptions => {\n      const updatedOptions = [...prevSelectedOptions];\n      updatedOptions[index] = option;\n      return updatedOptions;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"options-container\",\n    children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `option-box ${selectedOptions[index] === option ? 'selected' : ''}`,\n      onClick: () => handleOptionClick(option, index),\n      children: option\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(OptionButtons, \"S24nRharoliKpDmkOrz7zqRL0rI=\");\n_c = OptionButtons;\nexport default OptionButtons;\nvar _c;\n$RefreshReg$(_c, \"OptionButtons\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","OptionButtons","_ref","_s","options","answer","selectedOptions","setSelectedOptions","handleOptionClick","option","index","prevSelectedOptions","updatedOptions","className","children","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jkhaimi/Kesatyo/react-app-test/src/OptionButtons.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst OptionButtons = ({ options, answer }) => {\n  const [selectedOptions, setSelectedOptions] = useState([]);\n\n  const handleOptionClick = (option, index) => {\n    setSelectedOptions((prevSelectedOptions) => {\n      const updatedOptions = [...prevSelectedOptions];\n      updatedOptions[index] = option;\n      return updatedOptions;\n    });\n  };\n\n  return (\n    <div className=\"options-container\">\n      {options.map((option, index) => (\n        <button\n          key={index}\n          className={`option-box ${selectedOptions[index] === option ? 'selected' : ''}`}\n          onClick={() => handleOptionClick(option, index)}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default OptionButtons;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGC,IAAA,IAAyB;EAAAC,EAAA;EAAA,IAAxB;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAAH,IAAA;EACxC,MAAM,CAACI,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMU,iBAAiB,GAAGA,CAACC,MAAM,EAAEC,KAAK,KAAK;IAC3CH,kBAAkB,CAAEI,mBAAmB,IAAK;MAC1C,MAAMC,cAAc,GAAG,CAAC,GAAGD,mBAAmB,CAAC;MAC/CC,cAAc,CAACF,KAAK,CAAC,GAAGD,MAAM;MAC9B,OAAOG,cAAc;IACvB,CAAC,CAAC;EACJ,CAAC;EAED,oBACEZ,OAAA;IAAKa,SAAS,EAAC,mBAAmB;IAAAC,QAAA,EAC/BV,OAAO,CAACW,GAAG,CAAC,CAACN,MAAM,EAAEC,KAAK,kBACzBV,OAAA;MAEEa,SAAS,EAAG,cAAaP,eAAe,CAACI,KAAK,CAAC,KAAKD,MAAM,GAAG,UAAU,GAAG,EAAG,EAAE;MAC/EO,OAAO,EAAEA,CAAA,KAAMR,iBAAiB,CAACC,MAAM,EAAEC,KAAK,CAAE;MAAAI,QAAA,EAE/CL;IAAM,GAJFC,KAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKJ,CACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACjB,EAAA,CAxBIF,aAAa;AAAAoB,EAAA,GAAbpB,aAAa;AA0BnB,eAAeA,aAAa;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}