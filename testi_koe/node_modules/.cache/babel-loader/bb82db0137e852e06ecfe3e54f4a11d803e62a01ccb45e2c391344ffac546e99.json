{"ast":null,"code":"var _jsxFileName = \"/home/jkhaimi/Kesatyo/react-app-test/src/OptionButtons.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OptionButtons = _ref => {\n  _s();\n  let {\n    options,\n    answer\n  } = _ref;\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const handleOptionClick = (rowIndex, index) => {\n    setSelectedOptions(prevSelectedOptions => {\n      const updatedOptions = [...prevSelectedOptions];\n      updatedOptions[rowIndex] = index;\n      return updatedOptions;\n    });\n  };\n  const checkAnswers = () => {\n    let score = 0;\n    selectedOptions.forEach((selectedOption, rowIndex) => {\n      if (selectedOption === answer[rowIndex]) {\n        score++;\n      }\n    });\n    console.log(`Score: ${score}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"options-container\",\n    children: [options.map((rowOptions, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row-container\",\n      children: Array.isArray(rowOptions) ? rowOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `option-box ${selectedOptions[rowIndex] === index ? 'selected' : ''}`,\n        onClick: () => handleOptionClick(option, rowIndex, index),\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: Invalid options for row \", rowIndex]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-button\",\n      onClick: checkAnswers,\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 64\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(OptionButtons, \"S24nRharoliKpDmkOrz7zqRL0rI=\");\n_c = OptionButtons;\nexport default OptionButtons;\nvar _c;\n$RefreshReg$(_c, \"OptionButtons\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","OptionButtons","_ref","_s","options","answer","selectedOptions","setSelectedOptions","handleOptionClick","rowIndex","index","prevSelectedOptions","updatedOptions","checkAnswers","score","forEach","selectedOption","console","log","className","children","map","rowOptions","Array","isArray","option","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jkhaimi/Kesatyo/react-app-test/src/OptionButtons.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst OptionButtons = ({ options, answer }) => {\n  const [selectedOptions, setSelectedOptions] = useState([]);\n\n  const handleOptionClick = (rowIndex, index) => {\n    setSelectedOptions((prevSelectedOptions) => {\n      const updatedOptions = [...prevSelectedOptions];\n      updatedOptions[rowIndex] = index;\n      return updatedOptions;\n    });\n  };\n\n  const checkAnswers = () => {\n    let score = 0;\n    selectedOptions.forEach((selectedOption, rowIndex) => {\n      if (selectedOption === answer[rowIndex]) {\n        score++;\n      }\n    });\n    console.log(`Score: ${score}`);\n  };\n\n  return (\n    <div className=\"options-container\">\n      {options.map((rowOptions, rowIndex) => (\n        <div key={rowIndex} className=\"row-container\">\n          {Array.isArray(rowOptions) ? (\n            rowOptions.map((option, index) => (\n              <button\n                key={index}\n                className={`option-box ${selectedOptions[rowIndex] === index ? 'selected' : ''}`}\n                onClick={() => handleOptionClick(option, rowIndex, index)}\n              >\n                {option}\n              </button>\n            ))\n          ) : (\n            <p>Error: Invalid options for row {rowIndex}</p>\n          )}\n        </div>\n      ))}\n      <button className=\"submit-button\" onClick={checkAnswers}><strong>Submit</strong></button>\n    </div>\n  );\n};\n\nexport default OptionButtons;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGC,IAAA,IAAyB;EAAAC,EAAA;EAAA,IAAxB;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAAH,IAAA;EACxC,MAAM,CAACI,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMU,iBAAiB,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK;IAC7CH,kBAAkB,CAAEI,mBAAmB,IAAK;MAC1C,MAAMC,cAAc,GAAG,CAAC,GAAGD,mBAAmB,CAAC;MAC/CC,cAAc,CAACH,QAAQ,CAAC,GAAGC,KAAK;MAChC,OAAOE,cAAc;IACvB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIC,KAAK,GAAG,CAAC;IACbR,eAAe,CAACS,OAAO,CAAC,CAACC,cAAc,EAAEP,QAAQ,KAAK;MACpD,IAAIO,cAAc,KAAKX,MAAM,CAACI,QAAQ,CAAC,EAAE;QACvCK,KAAK,EAAE;MACT;IACF,CAAC,CAAC;IACFG,OAAO,CAACC,GAAG,CAAE,UAASJ,KAAM,EAAC,CAAC;EAChC,CAAC;EAED,oBACEd,OAAA;IAAKmB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,GAC/BhB,OAAO,CAACiB,GAAG,CAAC,CAACC,UAAU,EAAEb,QAAQ,kBAChCT,OAAA;MAAoBmB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC1CG,KAAK,CAACC,OAAO,CAACF,UAAU,CAAC,GACxBA,UAAU,CAACD,GAAG,CAAC,CAACI,MAAM,EAAEf,KAAK,kBAC3BV,OAAA;QAEEmB,SAAS,EAAG,cAAab,eAAe,CAACG,QAAQ,CAAC,KAAKC,KAAK,GAAG,UAAU,GAAG,EAAG,EAAE;QACjFgB,OAAO,EAAEA,CAAA,KAAMlB,iBAAiB,CAACiB,MAAM,EAAEhB,QAAQ,EAAEC,KAAK,CAAE;QAAAU,QAAA,EAEzDK;MAAM,GAJFf,KAAK;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKJ,CACT,CAAC,gBAEF9B,OAAA;QAAAoB,QAAA,GAAG,iCAA+B,EAACX,QAAQ;MAAA;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAChD,GAbOrB,QAAQ;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAcb,CACN,CAAC,eACF9B,OAAA;MAAQmB,SAAS,EAAC,eAAe;MAACO,OAAO,EAAEb,YAAa;MAAAO,QAAA,eAACpB,OAAA;QAAAoB,QAAA,EAAQ;MAAM;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtF,CAAC;AAEV,CAAC;AAAC3B,EAAA,CA3CIF,aAAa;AAAA8B,EAAA,GAAb9B,aAAa;AA6CnB,eAAeA,aAAa;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}