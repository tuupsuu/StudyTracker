{"ast":null,"code":"var _jsxFileName = \"/home/jkhaimi/Kesatyo/StudyTracker/testi_koe/src/SingleButtons.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SingleButtons = _ref => {\n  _s();\n  let {\n    options,\n    answer,\n    index,\n    onSubmit\n  } = _ref;\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const handleOptionClick = (option, rowIndex, optionIndex) => {\n    setSelectedOptions(prevSelectedOptions => {\n      const updatedOptions = [...prevSelectedOptions];\n      updatedOptions[rowIndex] = optionIndex;\n      return updatedOptions;\n    });\n  };\n  const checkAnswers = () => {\n    const includesNull = selectedOptions.includes(undefined);\n    const numQuestions = options.length;\n    if (includesNull === true || selectedOptions.length !== numQuestions) {\n      alert('Please answer all the questions before submitting.');\n    } else {\n      setIsSubmitted(true);\n      onSubmit(index, selectedOptions);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"single-container\",\n    children: [options.map((rowOptions, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row-container\",\n      children: Array.isArray(rowOptions) ? rowOptions.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `single-box ${selectedOptions[rowIndex] === optionIndex ? 'selected' : ''}`,\n        onClick: () => handleOptionClick(option, rowIndex, optionIndex),\n        children: option\n      }, optionIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: Invalid options for row \", rowIndex]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `submit-button ${isSubmitted ? 'submitted' : ''}`,\n      onClick: checkAnswers,\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(SingleButtons, \"mnlGXhzPGrRvPctYf/13Ogxtw4U=\");\n_c = SingleButtons;\nexport default SingleButtons;\nvar _c;\n$RefreshReg$(_c, \"SingleButtons\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SingleButtons","_ref","_s","options","answer","index","onSubmit","selectedOptions","setSelectedOptions","isSubmitted","setIsSubmitted","handleOptionClick","option","rowIndex","optionIndex","prevSelectedOptions","updatedOptions","checkAnswers","includesNull","includes","undefined","numQuestions","length","alert","className","children","map","rowOptions","Array","isArray","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jkhaimi/Kesatyo/StudyTracker/testi_koe/src/SingleButtons.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst SingleButtons = ({ options, answer, index, onSubmit }) => {\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const handleOptionClick = (option, rowIndex, optionIndex) => {\n    setSelectedOptions((prevSelectedOptions) => {\n      const updatedOptions = [...prevSelectedOptions];\n      updatedOptions[rowIndex] = optionIndex;\n      return updatedOptions;\n    });\n  };\n\n  const checkAnswers = () => {\n    const includesNull = selectedOptions.includes(undefined);\n    const numQuestions = options.length;\n    \n    if (includesNull === true || selectedOptions.length !== numQuestions) {\n      alert('Please answer all the questions before submitting.');\n    } else {\n      setIsSubmitted(true);\n      onSubmit(index, selectedOptions);\n    }\n  };\n\n  return (\n    <div className=\"single-container\">\n      {options.map((rowOptions, rowIndex) => (\n        <div key={rowIndex} className=\"row-container\">\n          {Array.isArray(rowOptions) ? (\n            rowOptions.map((option, optionIndex) => (\n              <button\n                key={optionIndex}\n                className={`single-box ${selectedOptions[rowIndex] === optionIndex ? 'selected' : ''}`}\n                onClick={() => handleOptionClick(option, rowIndex, optionIndex)}\n              >\n                {option}\n              </button>\n            ))\n          ) : (\n            <p>Error: Invalid options for row {rowIndex}</p>\n          )}\n        </div>\n      ))}\n      <button className={`submit-button ${isSubmitted ? 'submitted' : ''}`} onClick={checkAnswers}>\n        <strong>Submit</strong>\n      </button>\n    </div>\n  );\n};\n\nexport default SingleButtons;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGC,IAAA,IAA0C;EAAAC,EAAA;EAAA,IAAzC;IAAEC,OAAO;IAAEC,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAAL,IAAA;EACzD,MAAM,CAACM,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMc,iBAAiB,GAAGA,CAACC,MAAM,EAAEC,QAAQ,EAAEC,WAAW,KAAK;IAC3DN,kBAAkB,CAAEO,mBAAmB,IAAK;MAC1C,MAAMC,cAAc,GAAG,CAAC,GAAGD,mBAAmB,CAAC;MAC/CC,cAAc,CAACH,QAAQ,CAAC,GAAGC,WAAW;MACtC,OAAOE,cAAc;IACvB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,YAAY,GAAGX,eAAe,CAACY,QAAQ,CAACC,SAAS,CAAC;IACxD,MAAMC,YAAY,GAAGlB,OAAO,CAACmB,MAAM;IAEnC,IAAIJ,YAAY,KAAK,IAAI,IAAIX,eAAe,CAACe,MAAM,KAAKD,YAAY,EAAE;MACpEE,KAAK,CAAC,oDAAoD,CAAC;IAC7D,CAAC,MAAM;MACLb,cAAc,CAAC,IAAI,CAAC;MACpBJ,QAAQ,CAACD,KAAK,EAAEE,eAAe,CAAC;IAClC;EACF,CAAC;EAED,oBACER,OAAA;IAAKyB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,GAC9BtB,OAAO,CAACuB,GAAG,CAAC,CAACC,UAAU,EAAEd,QAAQ,kBAChCd,OAAA;MAAoByB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC1CG,KAAK,CAACC,OAAO,CAACF,UAAU,CAAC,GACxBA,UAAU,CAACD,GAAG,CAAC,CAACd,MAAM,EAAEE,WAAW,kBACjCf,OAAA;QAEEyB,SAAS,EAAG,cAAajB,eAAe,CAACM,QAAQ,CAAC,KAAKC,WAAW,GAAG,UAAU,GAAG,EAAG,EAAE;QACvFgB,OAAO,EAAEA,CAAA,KAAMnB,iBAAiB,CAACC,MAAM,EAAEC,QAAQ,EAAEC,WAAW,CAAE;QAAAW,QAAA,EAE/Db;MAAM,GAJFE,WAAW;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CACT,CAAC,gBAEFnC,OAAA;QAAA0B,QAAA,GAAG,iCAA+B,EAACZ,QAAQ;MAAA;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAChD,GAbOrB,QAAQ;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAcb,CACN,CAAC,eACFnC,OAAA;MAAQyB,SAAS,EAAG,iBAAgBf,WAAW,GAAG,WAAW,GAAG,EAAG,EAAE;MAACqB,OAAO,EAAEb,YAAa;MAAAQ,QAAA,eAC1F1B,OAAA;QAAA0B,QAAA,EAAQ;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAChC,EAAA,CAhDIF,aAAa;AAAAmC,EAAA,GAAbnC,aAAa;AAkDnB,eAAeA,aAAa;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}