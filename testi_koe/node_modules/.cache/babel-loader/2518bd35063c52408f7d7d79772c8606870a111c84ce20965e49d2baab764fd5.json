{"ast":null,"code":"var _jsxFileName = \"/home/jkhaimi/Kesatyo/StudyTracker/testi_koe/src/SingleButtons.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SingleButtons = _ref => {\n  _s();\n  let {\n    options,\n    index,\n    onSubmit\n  } = _ref;\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const handleOptionClick = optionIndex => {\n    setSelectedOptions(prevSelectedOptions => {\n      const updatedOptions = [...prevSelectedOptions];\n      updatedOptions[index] = optionIndex;\n      return updatedOptions;\n    });\n  };\n  const submitAnswers = () => {\n    onSubmit(index, selectedOptions);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"single-container\",\n    children: [options.map((rowOptions, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row-container\",\n      children: Array.isArray(rowOptions) ? rowOptions.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `single-box ${selectedOptions[index] === optionIndex ? 'selected' : ''}`,\n        onClick: () => handleOptionClick(optionIndex),\n        children: option\n      }, optionIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: Invalid options for row \", rowIndex]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-button\",\n      onClick: submitAnswers,\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 65\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(SingleButtons, \"S24nRharoliKpDmkOrz7zqRL0rI=\");\n_c = SingleButtons;\nexport default SingleButtons;\nvar _c;\n$RefreshReg$(_c, \"SingleButtons\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SingleButtons","_ref","_s","options","index","onSubmit","selectedOptions","setSelectedOptions","handleOptionClick","optionIndex","prevSelectedOptions","updatedOptions","submitAnswers","className","children","map","rowOptions","rowIndex","Array","isArray","option","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jkhaimi/Kesatyo/StudyTracker/testi_koe/src/SingleButtons.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst SingleButtons = ({ options, index, onSubmit }) => {\n  const [selectedOptions, setSelectedOptions] = useState([]);\n\n  const handleOptionClick = (optionIndex) => {\n    setSelectedOptions((prevSelectedOptions) => {\n      const updatedOptions = [...prevSelectedOptions];\n      updatedOptions[index] = optionIndex;\n      return updatedOptions;\n    });\n  };\n\n  const submitAnswers = () => {\n    onSubmit(index, selectedOptions);\n  };\n\n  return (\n    <div className=\"single-container\">\n      {options.map((rowOptions, rowIndex) => (\n        <div key={rowIndex} className=\"row-container\">\n          {Array.isArray(rowOptions) ? (\n            rowOptions.map((option, optionIndex) => (\n              <button\n                key={optionIndex}\n                className={`single-box ${selectedOptions[index] === optionIndex ? 'selected' : ''}`}\n                onClick={() => handleOptionClick(optionIndex)}\n              >\n                {option}\n              </button>\n            ))\n          ) : (\n            <p>Error: Invalid options for row {rowIndex}</p>\n          )}\n        </div>\n      ))}\n      <button className=\"submit-button\" onClick={submitAnswers}><strong>Submit</strong></button>\n    </div>\n  );\n};\n\nexport default SingleButtons;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGC,IAAA,IAAkC;EAAAC,EAAA;EAAA,IAAjC;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAAJ,IAAA;EACjD,MAAM,CAACK,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMW,iBAAiB,GAAIC,WAAW,IAAK;IACzCF,kBAAkB,CAAEG,mBAAmB,IAAK;MAC1C,MAAMC,cAAc,GAAG,CAAC,GAAGD,mBAAmB,CAAC;MAC/CC,cAAc,CAACP,KAAK,CAAC,GAAGK,WAAW;MACnC,OAAOE,cAAc;IACvB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1BP,QAAQ,CAACD,KAAK,EAAEE,eAAe,CAAC;EAClC,CAAC;EAED,oBACEP,OAAA;IAAKc,SAAS,EAAC,kBAAkB;IAAAC,QAAA,GAC9BX,OAAO,CAACY,GAAG,CAAC,CAACC,UAAU,EAAEC,QAAQ,kBAChClB,OAAA;MAAoBc,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC1CI,KAAK,CAACC,OAAO,CAACH,UAAU,CAAC,GACxBA,UAAU,CAACD,GAAG,CAAC,CAACK,MAAM,EAAEX,WAAW,kBACjCV,OAAA;QAEEc,SAAS,EAAG,cAAaP,eAAe,CAACF,KAAK,CAAC,KAAKK,WAAW,GAAG,UAAU,GAAG,EAAG,EAAE;QACpFY,OAAO,EAAEA,CAAA,KAAMb,iBAAiB,CAACC,WAAW,CAAE;QAAAK,QAAA,EAE7CM;MAAM,GAJFX,WAAW;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CACT,CAAC,gBAEF1B,OAAA;QAAAe,QAAA,GAAG,iCAA+B,EAACG,QAAQ;MAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAChD,GAbOR,QAAQ;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAcb,CACN,CAAC,eACF1B,OAAA;MAAQc,SAAS,EAAC,eAAe;MAACQ,OAAO,EAAET,aAAc;MAAAE,QAAA,eAACf,OAAA;QAAAe,QAAA,EAAQ;MAAM;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvF,CAAC;AAEV,CAAC;AAACvB,EAAA,CArCIF,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AAuCnB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}