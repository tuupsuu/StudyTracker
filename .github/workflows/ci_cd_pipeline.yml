name: CI/CD Pipeline user service

on:
  push:
    branches:
      - dev
      - main
      - topias

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install dependencies
        run: |
          cd UserService/
          npm ci
          cd ../ResultService/
          npm ci
          cd ../FrontEnd/my-app/
          npm ci

      - name: Build and test
        run: |
          cd UserService/
          screen -dmS node-server node .
          cd ../ResultService/
          screen -dmS node-server node .
          cd ../FrontEnd/my-app/
          screen -dmS node-server npm start

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Update package cache
        run: sudo apt-get update

      - name: Install Docker Compose
        run: sudo apt-get install -y docker-compose        

      - name: Build and push Docker images
        run: |
          docker-compose build
          docker-compose push

      - name: Add SSH known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -t rsa 172.104.236.131 >> ~/.ssh/known_hosts

      - name: Deploy to Docker server
        run: |
          # Assuming you have the docker-compose.yml file on the remote server
          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh root@172.104.236.131 'cd /root/ && docker-compose pull'
          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh root@172.104.236.131 'cd /root/ && docker-compose up -d'
        
